pipeline {
    agent any
    environment {
        AWS_DEFAULT_REGION = 'us-east-1'
        BASE_URL = 'https://dfsoz0oo4d.execute-api.us-east-1.amazonaws.com/Prod'
    }
    stages {
        stage('Get Code') {
            steps {
                git branch: 'develop', url: 'https://github.com/FoxMateo/Caso-practico-1D.git'
            }
        }
        stage('Static Test') {
            steps {
                sh '''
                    set -e
                    export PATH=$PATH:/tmp
                    /tmp/flake8 src/ > flake8-report.txt || echo "Flake8 completed with warnings"
                    /tmp/bandit -r src/ > bandit-report.txt || echo "Bandit completed with warnings"
                '''
                archiveArtifacts artifacts: 'flake8-report.txt, bandit-report.txt', fingerprint: true
            }
        }
        stage('Deploy') {
            steps {
                sh '''
                    set -e
                    echo "// Forced change $(date)" >> src/force_change.txt
                    sam build
                    sam deploy --stack-name todo-list-staging --s3-bucket foxmateo-sam-deploy --capabilities CAPABILITY_IAM --force-upload
                '''
            }
        }
        stage('Rest Test') {
            steps {
                script {
                    sh '''
                        set -e
                        export PATH=$PATH:/var/lib/jenkins/.local/bin
                        if ! command -v pytest &> /dev/null; then
                            echo "Instalando pytest..."
                            pip install --user pytest
                        fi
                        sleep 20
                        HTTP_STATUS=$(curl -s -o response.json -w "%{http_code}" $BASE_URL/todos)
                        cat response.json | jq .
                        BASE_URL=$BASE_URL python3 -m pytest test/integration/todoApiTest.py || true
                    '''
                }
            }
        }
        stage('Promote') {
            when {
                expression { currentBuild.result == 'SUCCESS' }
            }
            steps {
                sh '''
                    set -e
                    git checkout master
                    git merge develop
                    git push origin master
                '''
            }
        }
    }
}
